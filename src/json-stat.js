// Generated by CoffeeScript 1.7.1
(function() {
  window.JsonStat = (function() {
    function JsonStat(array, options) {
      this.collection = array;
      this.keys = [options];
      this.result = [];
    }

    JsonStat.prototype.statByTime = function(option) {
      var get_result, point, post_result, _fn, _i, _len, _ref;
      console.log(option);
      get_result = [];
      post_result = [];
      if (option.by === 'day') {
        _ref = this.collection;
        _fn = function(point) {
          var last, tmp;
          if (point.method === 'GET') {
            last = get_result[get_result.length - 1];
            if (last === void 0) {
              tmp = {
                t: moment(point.t).startOf('day').valueOf(),
                get_count: 0
              };
              get_result.push(tmp);
              last = get_result[get_result.length - 1];
            }
            if (moment(point.t).isSame(last.t, 'day')) {
              return last.get_count++;
            } else {
              tmp = {
                t: moment(point.t).startOf('day').valueOf(),
                get_count: 1
              };
              return get_result.push(tmp);
            }
          } else if (point.method === 'POST') {
            last = post_result[post_result.length - 1];
            if (last === void 0) {
              tmp = {
                t: moment(point.t).startOf('day').valueOf(),
                post_count: 0
              };
              post_result.push(tmp);
              last = post_result[post_result.length - 1];
            }
            if (moment(point.t).isSame(last.t, 'day')) {
              return last.post_count++;
            } else {
              tmp = {
                t: moment(point.t).startOf('day').valueOf(),
                post_count: 1
              };
              return post_result.push(tmp);
            }
          }
        };
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          point = _ref[_i];
          _fn(point);
        }
        console.log(get_result);
        return console.log(post_result);
      } else {

      }
    };

    JsonStat.prototype.rangeTime = function(start, end) {};

    JsonStat.prototype.filterByTime = function(option) {};

    return JsonStat;

  })();

}).call(this);
